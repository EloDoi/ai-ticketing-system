
```ts
import { Request, Response } from "express";
import { prisma } from "../../prisma/client";
import { Configuration, OpenAIApi } from "openai";
import dotenv from "dotenv";

dotenv.config();
const openai = new OpenAIApi(new Configuration({ apiKey: process.env.OPENAI_API_KEY }));

export async function recommendImprovementsHandler(req: Request, res: Response) {
  // For prototype: aggregate last 200 closed tickets
  const tickets = await prisma.ticket.findMany({ where: { status: "resolved" }, take: 200 });
  const prompt = `Analyze these ticket summaries and recommend 3 actionable improvements to product, docs, or support process. Return JSON array of { area: string, recommendation: string }.\n\nTickets:\n${JSON.stringify(tickets.map(t => ({ id: t.id, title: t.title, description: t.description })))}`;

  const resp = await openai.createChatCompletion({
    model: "gpt-4o-mini",
    messages: [{ role: "user", content: prompt }],
    max_tokens: 800
  } as any);

  const text = resp.data.choices?.[0]?.message?.content ?? "";
  try {
    return res.json(JSON.parse(text));
  } catch (e) {
    return res.json({ raw: text });
  }
}
```